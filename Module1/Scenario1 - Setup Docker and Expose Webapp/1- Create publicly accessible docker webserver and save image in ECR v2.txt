1- Launch an EC2 instance. Use a security group that has port 80 open.

2- Update your instance 
*	sudo yum update -y

3- Install Docker
*	sudo amazon-linux-extras install docker -y

4- Start the service
*	sudo service docker start

5-Add the ec2-user to the docker group so you can execute Docker commands without using sudo
*	sudo usermod -a -G docker ec2-user

6- Close terminal and reopen for changes to take effect (or run this reset)
* exec sg docker newgrp `id -gn`

7-Verify that the ec2-user can run Docker commands without sudo
*	docker info

8-Create a file called Dockerfile
*	touch Dockerfile

9- Create folder called src to hold source code
*	mkdir src

10- Create a source index.html file in the src folder. (This is our webapplication to be copied to our image)
*	touch src/index.html

11- Visit example.com, copy source code and paste in index.html

12-Paste the following code to Dockerfile 

#Use Centos as base image
FROM centos:latest AS build

# Install nginx web server
RUN yum install nginx -y

# Create the index.html in the same path as Dockerfile to copy to container
COPY src/index.html /usr/share/nginx/html

#Run nginx in the forground
CMD ["nginx", "-g", "daemon off;"]

EXPOSE 80


13- Build the Docker image from your Dockerfile.
*	docker build -t webserver:v1 .

14-Run docker images to verify that the image was created correctly. Check the image size.
*	docker images 

15- Build second image in a multistage format
*	edit Docker file with multistage docker commands

16- Build the second Docker image from your Dockerfile.
*	docker build -t webserver:v2 .

17- Run the following command to view the images and compare the size
*	docker images

18- Delete extra images downloaded from docker hub
*	docker rmi images <Image Name>

19- Run the second image on port 80
*	docker run -t -i -p 80:80 webserver:v2

20-Paste the public IP address to your browser to view the web content

--------
Create ECR Repository

1- In AWS, search for ECR and create a "private" repository called "webserver-repository". Allow image scanning.

2- Use one of the following methods to allow your instance to talk with ECR.
	a- Run aws configure and enter your keys and region 
	*	aws configure
	b- Attach a role to your instance to allow access to ECR
	*	Use the "EC2-ECR-Full-Access" role

3- Tag your Image - Add ECR URI at the end of the command
*	docker tag webserver:v1 <ECR URI>:webserverv1
*	docker tag webserver:v2 <ECR URI>:webserverv2

4- Copy the ECR URI and paste at the end of this command and run - You should see "login succeeded" at the end
*	aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin <ECR URI>

5- Push the image to ECR
*	docker push <ECR URI>:webserverv1
*	docker push <ECR URI>:webserverv2

6- Open repository and compare vulnerability scans